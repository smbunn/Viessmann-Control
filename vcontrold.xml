<?xml version="1.0"?>
<V-Control xmlns:vcontrol="http://www.openv.de/vcontrol">
 <unix>
     <config>
	<serial>
		<tty>127.0.0.1:3000</tty>
	</serial>
	<net>
		<port>3002</port>
		<allow ip='127.0.0.1'/>
		<allow ip='192.168.2.0/24'/>
	</net>
	<logging>
		<file>/dev/null</file>
		<syslog>y</syslog>
		<debug>n</debug>
	</logging>
	<device ID="2098"/>
     </config>
 </unix>
	<units>
	<unit name='Temperature'>
	   <abbrev>UT</abbrev>
	   <calc get='V/10' set='V*10'/>
	   <type>short</type>
	   <entity>Degrees Celsius</entity>
	</unit>
	<unit name='Number/10'>
	   <abbrev>UN</abbrev>
	   <calc get='V/10' set='V*10'/>
	   <type>short</type>
	   <entity></entity>
	</unit>
    <unit name='Number'>
      <abbrev>NU</abbrev>
      <calc get='V' set='V'/>
      <type>short</type>
      <entity></entity>
    </unit>
    <unit name='Temperature100'>
	   <abbrev>UT2</abbrev>
	   <calc get='V/100' set='V*100'/>
	   <type>short</type>
	   <entity>Degrees Celsius</entity>
	</unit>
	<unit name='Temperature 1Byte'>
          <abbrev>UT1</abbrev>
          <calc get='V/2' set='V*2'/>
          <type>char</type>
          <entity>Degrees Celsius</entity>
	</unit>
	<unit name='Temperature Short'>
          <abbrev>TS</abbrev>
          <calc get='V' set='V'/>
          <type>char</type>
          <entity>Degrees Celsius</entity>
	</unit>
	<unit name='Temperature 1Byte unsigned'>
          <abbrev>UT1U</abbrev>
          <calc get='V/2' set='V*2'/>
          <type>uchar</type>
          <entity>Degrees Celsius</entity>
	</unit>
	<unit name='Temperature 1Byte unsigned'>
          <abbrev>UTI</abbrev>
          <calc get='V' set='V'/>
          <type>uchar</type>
          <entity>Degrees Celsius</entity>
	</unit>
	<unit name='Status'>
	   <abbrev>ST</abbrev>
	   <calc get='V' set='V'/>
	   <type>char</type>
	   <entity></entity>
	</unit>
	<unit name='Counter'>
	   <abbrev>CO</abbrev>
	   <calc get='V' set='V'/>
	   <type>int</type>
	   <entity></entity>
	</unit>
	<unit name='Percent'>
	   <abbrev>PR</abbrev>
	   <calc get='V/2' set='V*2'/>
	   <type>short</type>
	   <entity>%</entity>
	</unit>
	<unit name='Percent 1 Byte unsigned'>
	   <abbrev>PR1</abbrev>
	   <calc get='V' set='V'/>
	   <type>uchar</type>
	   <entity>%</entity>
	</unit>
	<unit name='CounterS'>
	   <abbrev>CS</abbrev>
	   <calc get='V/3600' set='V*3600'/>
	   <type>uint</type>
	   <entity>Hours</entity>
	</unit>
	<unit name='Flow'>
	   <abbrev>FL</abbrev>
	   <calc get='V/1000' set='V*1000'/>
	   <type>int</type>
	   <entity></entity>
	</unit>
	<unit name='CycleTime'>
	   <abbrev>CT</abbrev>
	   <type>cycletime</type>
	</unit>
	<unit name='ReturnStatus'>
	   <abbrev>RT</abbrev>
	   <type>enum</type>
	   <enum bytes='00' text='0'/>
	   <enum bytes='01' text='1'/>
	   <enum text='NOT OK'/>
	</unit>
	<unit name='ChangeMode'>
	   <abbrev>CM</abbrev>
	   <type>enum</type>
	   <enum bytes='00' text='Standby'/>
	   <enum bytes='01' text='DHW Only'/>
	   <enum bytes='02' text='H+WW'/>
	   <enum bytes='03' text='Permanently Reduced Operation'/>
	   <enum bytes='04' text='Permanently Normal Operation'/>
	   <enum text='UNKNOWN'/>
	</unit>
	<unit name='ReadMode'>
	   <abbrev>RM</abbrev>
	   <type>enum</type>
	   <enum bytes='00' text='Standby mode (permanently)'/>
	   <enum bytes='01' text='Reduced Operation (timer)'/>
	   <enum bytes='02' text='Normal Operation (timer)'/>
	   <enum bytes='03' text='Normal Operation (permanently)'/>
	   <enum text='UNKNOWN'/>
	</unit>	   	
	<unit name='SetReturnStatus'>
           <abbrev>SR</abbrev>
           <type>enum</type>
           <enum bytes='00' text='OK'/>
           <enum bytes='05' text='SYNC (NOT OK)'/>
           <enum text='NOT OK'/>
	</unit>
	<unit name='SystemTime'>
	   <abbrev>TI</abbrev>
	   <type>systime</type>
	</unit>
	<unit name='ErrorState'>
	   <abbrev>ES</abbrev>
	   <type>errstate</type>
	   <enum bytes='00' text='No faults'/>
	   <enum bytes='01' text='System fault'/>
	   <enum bytes='02' text='Data error standard setting'/>
	   <enum bytes='03' text='Configuration fault'/>
	   <enum bytes='05' text='Fault refrigerant circuit'/>		   
	   <enum bytes='06' text='Fault refrigerant circuit 2'/>	
	   <enum bytes='07' text='Message refrigerant circuit'/>	
	   <enum bytes='08' text='Message refrigerant circuit 2'/>
	   <enum bytes='09' text='Electricty Meter PV'/>
	   <enum bytes='0A' text='External Unit'/>	   
	   <enum bytes='0B' text='External Unit'/>	   
	   <enum bytes='0C' text='External Unit'/>	
	   <enum bytes='0D' text='Test Mode External Unit'/>
	   <enum bytes='0E' text='Ventilation Unit'/>	   	   
	   <enum bytes='0F' text='Ventilation Unit'/>
	   <enum bytes='10' text='Outside temperature sensor short circuit'/>
	   <enum bytes='18' text='Outside temperature sensor open circuit'/>
	   <enum bytes='20' text='Short-circuit flow sensor secondary'/>
	   <enum bytes='21' text='Short-circuit return temperature sensor secondary'/>
	   <enum bytes='22' text='Short-circuit return temperature sensor secondary 2'/>
	   <enum bytes='28' text='Interruption outside temperature sensor'/>
	   <enum bytes='29' text='Interruption rewind temperature sensor'/>
	   <enum bytes='30' text='Boiler temperature sensor short circuit'/>
	   <enum bytes='38' text='Interruption Boiler temperature sensor'/>
	   <enum bytes='40' text='Short-circuit flow temperature sensor M2'/>
	   <enum bytes='42' text='Interruption flow temperature sensor M2'/>
	   <enum bytes='50' text='Short-circuit temperature sensor memory'/>
	   <enum bytes='58' text='Interruption temperature sensor memory'/>
	   <enum bytes='92' text='Solar: short circuit, collector temperature sensor'/>
	   <enum bytes='93' text='Solar: short circuit, collector return temp. sensor'/>
	   <enum bytes='94' text='Solar: short circuit, cylinder temperature sensor'/>
	   <enum bytes='9A' text='Solar: lead break, collector temperature sensor'/>
	   <enum bytes='9B' text='Solar: lead break, collector return temp. sensor'/>
	   <enum bytes='9C' text='Solar: lead break, cylinder temperature sensor'/>
	   <enum bytes='9F' text='Solar: gen. error message'/>
	   <enum bytes='A7' text='Fault, programming unit (clock module)'/>
	   <enum bytes='B0' text='Short circuit, flue gas temperature sensor'/>
	   <enum bytes='B1' text='KM Bus Communication error circ 1'/>
	   <enum bytes='B2' text='KM Bus Communication error circ 2'/>
	   <enum bytes='B4' text='A to D converter error'/>
	   <enum bytes='B5' text='Internal error (Electronics)'/>
	   <enum bytes='B6' text='Invalid hardware ID (Electronics)'/>
	   <enum bytes='B7' text='KM Bus external unit error'/>
	   <enum bytes='B8' text='Lead break, flue gas temperature sensor'/>
	   <enum bytes='B9' text='KM Bus Solar control, unit'/>
	   <enum bytes='BA' text='KM Bus mixer circuit'/>
	   <enum bytes='BC' text='KM Bus remote control, heating M1'/>
	   <enum bytes='BD' text='KM Bus remote control, heating M2'/>
	   <enum bytes='BE' text='KM Bus remote control, heating M3'/>
	   <enum bytes='BF' text='Incorrect LON module'/>
	   <enum bytes='C1' text='External safety device (boiler cools off)'/>
	   <enum bytes='C2' text='Communication error, solar control unit (KM BUS)'/>
	   <enum bytes='C5' text='Error, variable speed pump, heating circuit M1 (KM BUS)'/>
	   <enum bytes='C6' text='Error, variable speed pump, heating circuit M2 (KM BUS)'/>
	   <enum bytes='C7' text='Error, variable speed pump, heating circuit M3 (KM BUS)'/>
	   <enum bytes='C8' text='Error, water level limiter'/>
	   <enum bytes='C9' text='Error, maximum pressure'/>
	   <enum bytes='CA' text='Error, minimum pressure/Error maximum pressure 2'/>
	   <enum bytes='CB' text='Error, maximum pressure 2'/>
	   <enum bytes='CD' text='cCommunication error, Vitocom 300 (KM BUS)'/>
	   <enum bytes='CE' text='Communication error, connection extension (KM BUS)'/>
	   <enum bytes='CF' text='Communication error: LON â€“ module for controller module'/>
	   <enum bytes='D1' text='Burner Fault, Boiler'/>
	   <enum bytes='D4' text='Safety breaker tripped or fault message is not inserted properly'/>
	   <enum bytes='D5' text='Cascade: Boiler does not respond'/>
	   <enum bytes='D6' text='External fault 1, plug-in adaptor'/>
	   <enum bytes='D7' text='External fault 2, plug-in adaptor'/>
	   <enum bytes='D8' text='External fault 3, plug-in adaptor'/>	   
	   <enum bytes='DA' text='Short circuit room temperature sensor, heating circuit M1'/>
	   <enum bytes='DB' text='Short circuit room temperature sensor, heating circuit M2'/>
	   <enum bytes='DC' text='Short circuit room temperature sensor, heating circuit M3'/>
	   <enum bytes='DD' text='ead break room temperature sensor, heating circuit M1'/>
	   <enum bytes='DE' text='Lead break room temperature sensor, heating circuit M2'/>
	   <enum bytes='DF' text='Lead break room temperature sensor, heating circuit M3'/>
	   <enum bytes='E0' text='Error, external subscriber / appliance on the LON'/>
	   <enum bytes='E4' text='Error supply voltage'/>
	   <enum bytes='E5' text='Internal error, burner control unit'/>
	   <enum bytes='E6' text='Fault, feedback, oil preheater (for the Vitoplus)'/>
	   <enum bytes='F0' text='Communication error, burner control unit'/>
	   <enum bytes='F1' text='Flue gas temperature limiter has responded'/>
	   <enum bytes='F2' text='Temperature limiter has responded'/>
	   <enum bytes='F3' text='Flame signal is already present at burner start'/>
	   <enum bytes='F4' text='No flame signal detected'/>
	   <enum bytes='F5' text='Air pressure switch not open at burner start or not closed when ignition load is reached'/>
	   <enum bytes='F6' text='Gas pressure switch not open at burner start or not closed after the flame has stabilised'/>
	   <enum bytes='F7' text='Air pressure sensor, sensor short circuit or offset value outside tolerance'/>
	   <enum bytes='F8' text='Fuel valve closes too late'/>
	   <enum bytes='F9' text='Fan speed too low at burner start'/>
	   <enum bytes='FA' text='Fan speed too high at burner start'/>
	   <enum bytes='FC' text='Modulation valve control faulty'/>
	   <enum bytes='FD' text='Fault, burner control unit'/>
	   <enum bytes='FE' text='SBoiler coding card faulty or incorrect, or EMC fault'/>
	   <enum bytes='FF' text='Internal error'/>
	   <enum text='UNKNOWN'/>
	</unit>
	<unit name='DeviceType'>
		<abbrev>DT</abbrev>
		<type>enum</type>
			<enum bytes='20 53 01 2B' text='V200WB2 ID=2053 Protocol:GWG_VBEM'/>
			<enum bytes='20 98' text='V200KW2 ID=2098 Protocol:KW'/>
			<enum bytes='20 C2' text='VDensHO1 ID=20C2 Protocol:KW'/>
			<enum text='UNKNOWN'/>
	</unit>
	<unit name='Burner Hours'>
		<abbrev>BH</abbrev>
		<type>uchar</type>
		<calc get='(B1 * 100)+B0'/>
		<entity>h</entity>
	</unit>
	<unit name='ErrorStateGWG'>
		<abbrev>ESG</abbrev>
	<type>enum</type>
		<enum bytes='00' text='Keine Stoerung'/>
		<enum bytes='02' text='Fehler Sicherheitskette'/>
		<enum bytes='04' text='Brennerstoerung 04'/>
		<enum bytes='05' text='Brennerstoerung 05'/>
		<enum bytes='07' text='Brennerstoerung 07'/>
		<enum bytes='08' text='Brennerstoerung 09'/>
		<enum bytes='09' text='Brennerstoerung 09'/>
		<enum bytes='0A' text='Brennerstoerung 10'/>
		<enum  text='UNKNOWN'/>
	</unit>
	<unit name='Bitstatus'>
		<abbrev>BST</abbrev>
		<type>uchar</type>
		<icalc get="(B0 &amp; (0x01&lt;&lt;BP))&gt;&gt; BP"/>
		<enum bytes='00' text='0'/>
		<enum bytes='01' text='1'/>
		<enum text='UNKNOWN'/>
	</unit>
	<unit name='HKP Pumpentyp'>
           <abbrev>HKT</abbrev>
           <type>uchar</type>
           <icalc get="(B0 &amp; (0x01&lt;&lt;BP))&gt;&gt; BP"/>
           <enum bytes='00' text='stufig'/>
           <enum bytes='01' text='drehzahlgeregelt'/>
           <enum text='UNKNOWN'/>
	</unit>
	</units>
	<protocols>
		<protocol name='P300'>
			<pid>41</pid>
			<macros>
			<macro name='GETADDR'>
				<command>SEND 00 01</command>
			</macro>
			<macro name='SETADDR'>
				<command>SEND 01 F4</command>
			</macro>
			</macros>
		<commands>
			<command name="getaddr">
				<send>GETADDR $addr $hexlen;RECV $len $unit</send>
			</command>
			<command name="setaddr">
				<send>SETADDR $addr $hexlen;SEND BYTES $unit;RECV 1 SR</send>
			</command>
			<command name="gettestaddr">
				<send></send>
			</command>
		</commands>
		</protocol>
		<protocol name='KW2'>
			<macros>
			<macro name='SYNC'>
				<command>SEND 04;WAIT 05</command>
			</macro>
			<macro name='GETADDR'>
				<command>SEND 01 F7</command>
			</macro>
			<macro name='SETADDR'>
				<command>SEND 01 F4</command>
			</macro>
		</macros>
	  <commands>
		<command name="getaddr">
			<send>SYNC;GETADDR $addr $hexlen;RECV $len $unit</send>
		</command>
		<command name="setaddr">
			<send>SYNC;SETADDR $addr $hexlen;SEND BYTES $unit;RECV 1 SR</send>
		</command>
		</commands>
		</protocol>
			<protocol name='GWG'>
				<macros>
				<macro name='SYNC'>
					<command>SEND 04;WAIT 05</command>
				</macro>
				<macro name='GETADDR'>
					<command>SEND 01 CB</command>
				</macro>
				<macro name='GETBADDR'>
					<command>SEND 01 9E</command>
				</macro>
				<macro name='GETVADDR'>
					<command>SEND 01 C7</command>
				</macro>
				<macro name='GETPADDR'>
					<command>SEND 01 6E</command>
				</macro>
				<macro name='GETEADDR'>
					<command>SEND 01 AE</command>
				</macro>
				<macro name='GETXADDR'>
					<command>SEND 01 C5</command>
				</macro>
				<macro name='GETKMADDR'>
					<command>SEND 01 43</command>
				</macro>
			</macros>
	<commands>
	<command name="getaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
	   	     <send>SYNC;GETADDR $addr $hexlen 04;RECV $len $unit</send>
	</command>
	<command name="gettestaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
	   	     <send>SYNC;GETADDR;SEND BYTES;SEND 01 04;RECV 1</send>
	</command>
	<command name="getbaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
                     <send>SYNC;GETBADDR $addr $hexlen 04;RECV $len $unit</send>
	</command>
	<command name="getbtestaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
                     <send>SYNC;GETBADDR;SEND BYTES;SEND 01 04;RECV 1</send>
	</command>
	<command name="getpaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
                     <send>SYNC;GETPADDR $addr $hexlen 04;RECV $len $unit</send>
	</command>
	<command name="getptestaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
                     <send>SYNC;GETPADDR;SEND BYTES;SEND 01 04;RECV 1</send>
	</command>
	<command name="getvaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
                     <send>SYNC;GETVADDR $addr $hexlen 04;RECV $len $unit</send>
	</command>
	<command name="getvtestaddr">
		     <retry>3</retry>
		     <recvTimeout>150</recvTimeout>
	   	     <send>SYNC;GETVADDR;SEND BYTES;SEND 01 04;RECV 1</send>
	</command>
	<command name="geteaddr">
			<retry>3</retry>
			<recvTimeout>150</recvTimeout>
			<send>SYNC;GETEADDR $addr $hexlen 04;RECV $len $unit</send>
	</command>
	<command name="getetestaddr">
			<retry>3</retry>
			<recvTimeout>150</recvTimeout>
			<send>SYNC;GETEADDR;SEND BYTES;SEND 01 04;RECV 1</send>
	</command>
	<command name="getxaddr">
			<retry>3</retry>
			<recvTimeout>150</recvTimeout>
			<send>SYNC;GETXADDR $addr $hexlen 04;RECV $len $unit</send>
	</command>
	<command name="getxtestaddr">
			<retry>3</retry>
			<recvTimeout>150</recvTimeout>
			<send>SYNC;GETXADDR;SEND BYTES;SEND 01 04;RECV 1</send>
		</command>
	<command name="getkmaddr">
		    <retry>3</retry>
		    <recvTimeout>150</recvTimeout>
			<send>SYNC;GETKMDDR $addr $hexlen 04;RECV $len $unit</send>
    </command>
	<command name="getkmtestaddr">
			<retry>3</retry>
			<recvTimeout>150</recvTimeout>
			<send>SYNC;GETKMADDR;SEND BYTES;SEND 01 04;RECV 1</send>
	</command>
    <command name="init">
			<send>SEND 16 00 00;PAUSE 100;SEND 16 00 00;PAUSE 100;SEND 16 00 00;PAUSE 100;SEND 16 00 00;PAUSE 100</send>
    </command>
	<command name="setaddr">
			<send>SYNC;RECV 1</send>
	</command>
	</commands>
 </protocol>
 </protocols>
 <extern xmlns:xi="http://www.w3.org/2003/XInclude">
 <xi:include href="vito.xml" parse="xml"/>
 </extern>
</V-Control>
